<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns:idx="urn:atom-extension:indexing" xmlns:gr="http://www.google.com/schemas/reader/atom/" xmlns:media="http://search.yahoo.com/mrss/" xmlns="http://www.w3.org/2005/Atom" idx:index="no"><!--
Content-type: Preventing XSRF in IE.

&lt;p&gt;But fear not, if you subscribe to my ramblings, for I will continue writing at my new blog, &lt;a href="http://blog.zzamboni.org/"&gt;Ideally Blue&lt;/a&gt;, now hosted by the fine folks at &lt;a href="http://posterous.com/"&gt;posterous.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have ever read BrT or found anything here useful, I’d like to thank you. Hope to see you over at Ideally Blue!&lt;/p&gt;
&lt;p&gt;Cheers.&lt;/p&gt;
&lt;div&gt;via &lt;a href="http://vimeo.com/6747788"&gt;vimeo.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;20-second clip of Obama photos with 130 visiting dignitaries at the UN meeting. I wonder how much time he spent practicing that smile?&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/barack-obamas-amazingly-consistent-smile-12"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://www.iihs.org/50th/default.html"&gt;iihs.org&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;“[They] don’t build cars like they used to. They build them better.” &lt;/p&gt;
&lt;p&gt;The difference in the crash results is astonishing (look at both the photos and the video).&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/crash-test-1959-bel-air-vs-2009-malibu-0"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://www.youtube.com/watch?v=zSgiXGELjbc"&gt;youtube.com&lt;/a&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/carl-sagan-a-glorious-dawn-ft-stephen-hawking-13"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;One of the things I will miss from ch –Diego&lt;/p&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via email&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/waedenswiler-beer"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;–Diego&lt;/p&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via email&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/brau-huus-cheeseburger"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://www.tomscott.com/webcycle/"&gt;tomscott.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;The solution to geek fitness problems?&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/the-webcycle-tom-scott"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Everyone would agree that usability is an important aspect of Web design. Whether you’re working on a portfolio website, online store or Web app, making your pages easy and enjoyable for your visitors to use is key. Many studies have been done over the years on various aspects of Web and interface design, and the findings are valuable in helping us improve our work. Here are &lt;strong&gt;10 useful usability findings and guidelines&lt;/strong&gt; that may help you improve the user experience on your websites.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div&gt;via &lt;a href="http://www.smashingmagazine.com/2009/09/24/10-useful-usability-findings-and-guidelines/"&gt;smashingmagazine.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Interesting findings. I have experienced a few of these, for example failing to find a link because it looks too much like an ad block, and I automatically ignore it.&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/10-useful-usability-findings-and-guidelines-s-1"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://www.cabel.name/2009/09/windows-7-party.html"&gt;cabel.name&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Awesome edit.&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/windows-7-party"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;
&lt;p&gt;&lt;img src="https://www.problogdesign.com/wp-content/uploads/2009/08/bad-web-design-banner.jpg" height="129" alt="bad-web-design-banner" width="500"&gt;&lt;/p&gt;
&lt;p&gt;Every once in a while you will come across a page that &lt;strong&gt;just doesn’t seem ‘right’&lt;/strong&gt;. There are three elements of a website that can be harmed by bad practice:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The website lacks something in its design.&lt;/li&gt;
&lt;li&gt;The content is written badly.&lt;/li&gt;
&lt;li&gt;The search engines don’t like something about the site.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Considering the three points above, this article will explains the do’s and dont’s of certain design habits.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div&gt;via &lt;a href="https://www.problogdesign.com/general-tips/30-bad-practices-of-web-designers/"&gt;problogdesign.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Nice set of recommendations.&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/30-bad-practices-of-web-designers"&gt;zznippets&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://www.dailymail.co.uk/news/worldnews/article-1215443/Australia-dust-storm-sweeps-eastern-coast.html"&gt;dailymail.co.uk&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Unreal images.&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/huge-dust-storm-in-sidney"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;
&lt;p&gt;First off, credit for this fix goes to &lt;a href="https://twitter.com/geoffwatts"&gt;Geoff Watts&lt;/a&gt; from his &lt;a href="http://twitter.com/geoffwatts/status/3605414263"&gt;two&lt;/a&gt; &lt;a href="http://twitter.com/geoffwatts/status/3605464669"&gt;tweets&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you’re using Snow Leopard, you’ll find that the current version of MacFusion refuses to complete a connection to a remote server.  You can fix this in two steps:&lt;/p&gt;
&lt;p&gt;First, quit MacFusion.&lt;/p&gt;
&lt;p&gt;Second, open System Preferences and then open the MacFUSE pane.  Check the “Show Beta Versions” box and click “Check For Updates”.  Go ahead and update MacFUSE.&lt;/p&gt;
&lt;p&gt;Third, open up a terminal and do the following:&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre style="font-family:monospace"&gt;rm /Applications/Macfusion.app/Contents/PlugIns/sshfs.mfplugin/Contents/Resources/sshnodelay.so&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Your MacFusion installation should now be working on Snow Leopard.  I’ve tested SSH and FTP connectivity so far, and they both appear to be working.  Thanks again to Geoff for the fix!&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div&gt;via &lt;a href="http://rackerhacker.com/2009/08/28/fix-macfusion-on-snow-leopard/"&gt;rackerhacker.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Worked perfectly for me. MacFusion is such a great tool.&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/fix-macfusion-on-snow-leopard-racker-hacker"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://www.space.com/common/media/video/player.php?videoRef=SP_090911_burritos-in-space"&gt;space.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Must be trickier than it looks &lt;img src="http://zzamboni.org/brt/wp-includes/images/smilies/icon_smile.gif" alt=":-)"&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/sts-128-burritos-in-space"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Also, testing to posterous from my phone. –Diego&lt;/p&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via email&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/at-the-tufi-fest-in-adliswil"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;i&gt;It isn’t so much a leaving as a beginning of something else.  When you return, as you will, it will be with a more wordly viewpoint.  That is both a loss and a gain.&lt;/i&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div&gt;Now, after all these years, it’s time to go home.&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div&gt;At the end of October, we will be moving back to Mexico, to live in the beautiful colonial city of &lt;a href="http://en.wikipedia.org/wiki/Quer%C3%A9taro,_Quer%C3%A9taro"&gt;Queretaro&lt;/a&gt;. I will take a very interesting job offer, which I will tell you about at the proper time.&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div&gt;Going back to Mexico is something Susana and I always said we wanted to do eventually, and this seems like the perfect opportunity to actually do it. The girls are still young, we are going back with a solid job offer, and to live in a very nice city. We are truly excited to go back. Still, it’s not without some mixed feelings. We have been out of our home country for so long, that I think it’s inevitable there will be some reverse culture shock. Switzerland is a beautiful, nice and safe country, which has given us a lot, and I very much like my job here. Still, I jump from joy every time I think we will be back in our home country, every time I realize there won’t be any more harsh winters, every time I think I’ll be able to eat Mexican food anytime I want, and so many other things I miss. Going back just feels so good!&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;
&lt;div&gt;The next step, of course, is to execute the plan. We are already waist-deep in preparations, planning, searching, and so many other things. It’s an exciting time. Stay tuned.&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via email&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/going-home-49"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;
&lt;p&gt;We’re big fans of Google Reader. It’s one of the easiest ways to view everyone’s stuff fast. Yesterday, Google Reader added a new &lt;a href="http://googlereader.blogspot.com/2009/08/flurry-of-features-for-feed-readers.html"&gt;Send To&lt;/a&gt; feature that lets you post to your favorite places right from Google Reader while you’re looking at stuff.&lt;/p&gt;
&lt;p&gt;By popular demand, now you can use this new Send To feature with Posterous. Go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Send To&lt;/strong&gt; in &lt;a href="http://reader.google.com"&gt;Google Reader&lt;/a&gt; and under “Don’t see your favorite site?” click &lt;strong&gt;Create Custom Link&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then copy and paste the values below into the custom link fields:&lt;/p&gt;
&lt;table border="0" style="border-top:1px solid #999;margin-top:0px"&gt;
&lt;tr&gt;
&lt;td&gt;Name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;URL&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Icon URL&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;It should look like this: &lt;/p&gt;
&lt;div&gt;&lt;img src="https://posterous.com/getfile/files.posterous.com/blog/TiWVftjZtjgaCZ0LsfcXF6FWVwBxm1qEKKDMSQofA7muecsqwmEiCphKlX3f/moz-screenshot-1.jpg" height="152" width="500"&gt;&lt;/div&gt;
&lt;p&gt;Click Save and you’re done.&lt;/p&gt;
&lt;p&gt;Now when browsing Google Reader, you’ll see a “Send To” option for Posterous at the bottom of each reader entry like so: &lt;/p&gt;
&lt;div&gt;&lt;img src="https://posterous.com/getfile/files.posterous.com/blog/qdrFLmifRvYFEN8Yv4DnXUGRDctCJxeZy9jIBCbMmUFf1Udp6YkVrtRcGId3/moz-screenshot-2.jpg" height="73" width="354"&gt;&lt;/div&gt;
&lt;p&gt;When you click Posterous, you’ll be sent to our “Share on Posterous” page that works like our Bookmarklet. We’ve also revamped the way the bookmarklet handles text posts so if you don’t select any text on a page, we’ll still try to extract the meatiest part of the content of a page.&lt;/p&gt;
&lt;p&gt;Of course, you can always still just click “Email” to &lt;a href="http://zzamboni.org/brt#"&gt;&lt;/a&gt;&lt;a href="mailto:post@posterous.com"&gt;post@posterous.com&lt;/a&gt;, and that will still work just great too.&lt;/p&gt;
&lt;p&gt;Feel free to email us at &lt;a href="http://zzamboni.org/brt#"&gt;&lt;/a&gt;&lt;a href="mailto:help@posterous.com"&gt;help@posterous.com&lt;/a&gt; if you run into any problems.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div&gt;via &lt;a href="http://blog.posterous.com/send-to-posterous-directly-from-google-reader"&gt;blog.posterous.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Testing &lt;img src="http://zzamboni.org/brt/wp-includes/images/smilies/icon_smile.gif" alt=":-)"&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/send-to-posterous-directly-from-google-reader-11"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://vimeo.com/5606758"&gt;vimeo.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Beautiful video.&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/kuroshio-sea-2nd-largest-aquarium-tank-in-the-20"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;via &lt;a href="http://www.toothpastefordinner.com/"&gt;toothpastefordinner.com&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;I must be antidextrous too.&lt;/p&gt;
&lt;/div&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via web&lt;/a&gt;  from &lt;a href="http://posterous.zzamboni.org/toothpaste-for-dinner-the-most-addictive-comi"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;div style="font-family:Helvetica;font-size:12px;color:black;text-align:left"&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://blog.posterous.com/posterous-now-supports-traileraddict-embeds-a"&gt;http://blog.posterous.com/posterous-now-supports-traileraddict-embeds-a&lt;/a&gt;
&lt;p style="font-size:10px"&gt; &lt;a href="http://posterous.com"&gt;Posted via email&lt;/a&gt;  from &lt;a href="http://zzamboni.posterous.com/posterous-keeps-getting-better"&gt;zzamboni’s posterous&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;If you find anything that is broken, or you have any type of feedback, please let me know (ideally, create an &lt;a href="http://github.com/zzamboni/things2thl/issues"&gt;issue in github&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;A full review of THL will follow when I’ve had a few days to play with it.&lt;/p&gt;
&lt;p&gt;Anyway, so much for today. I’ll try to write more often during the rest of the year.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://zzamboni.org/brt/wp-content/uploads/2008/12/picture-1.png" width="334" height="276" alt="Spam-vs-ham pie chart"&gt;The Akismet stats screen is really nice too. Check out this impressive pie chart of spam-vs-ham on my blog. And I don’t get that many comments. Incredible.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unpack the zip file and put the ” Clean Downloads stack” application in your Downloads folder.&lt;/li&gt;
&lt;li&gt;Run the following command:
&lt;pre&gt;&lt;code&gt;touch -mt 202001010101.01 " Clean downloads stack.app"&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you want to roll your own, here’s the script (which you can find inside the app as Contents/Resources/script:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
DIR="$HOME/Downloads"
cd $DIR
ls -1 | grep -v 'Clean downloads stack' | sed 's/^/rm -rf "/; s/$/"/' | bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This does the same as the Automator workflow from the original hint, but much, much faster. Of course, you may want to change its icon to match your selected overlay icons.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;I spent a few minutes today trying to figure out why, when setting a value to zero in an NSTableView, the number formatter I had associated with that column (to add a percentage sign to each number) was not being applied. Eventually, I realized that zero is a special case for NSNumberFormatter, and by default the percentage sign was not there. Adding it solved the mystery.&lt;/p&gt;
&lt;p&gt;As usual, tip of the hat to &lt;a href="http://www.cs.oberlin.edu/~kuperman/"&gt;Ben Kuperman&lt;/a&gt; for encouragement, testing, coding and ideas.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://zzamboni.org/brt/files/Get_image_from_Vladstudio.zip"&gt;Get image from Vladstudio.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://zzamboni.org/brt/files/Get_image_from_NASA_image_of_the_day.zip"&gt;Get image from NASA image of the day.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use them, unzip and place the .workflow files in your ~/Library/Scripts/Applications/Safari folder – by putting it there they will appear at the top of the script menu when Safari is the active application (if you don’t have it enabled, you can do so by running AppleScript Utility, found in /Applications/AppleScript).&lt;/p&gt;
&lt;p&gt;Before you use them, you should configure them to your settings. Open the scripts in Automator and change the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The resolution of the image you want. In both scripts it is found in several of the steps (either as “1600×1200″ or “1600-1200″, make sure you change all of them and use the same format as before). The NASA site supports 1600×1200, 1024×768 and 800×600, Vladstudio in addition has 800×480, 1024×600, 1152×864 and 1280×1024.&lt;/li&gt;
&lt;li&gt;The folder where you want to download the images. Double click the “DesktopImagesFolder” in the list of variables at the bottom of the Automator window, and select the folder where you want to put the images.&lt;/li&gt;
&lt;li&gt;If you don’t have Growl or don’t want notifications, simply click the “X” button on all the steps in each workflow that mention Growl or growlnotify.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you customize and save the scripts, you should be able to select the corresponding script when viewing an image on either site, and the appropriately-sized image will be automatically downloaded and saved. Make sure you don’t navigate to a different page or tab in Safari until the script has run.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;So, if you are subscribed to my RSS feed (you know who you are, all three of you) and would like to continue seeing my bookmarks, please subscribe directly to the delicious feed, or to my FF feed. Thanks.&lt;/p&gt;
&lt;p&gt;As I advance through the book, I am more amazed at how much support Cocoa provides for all sorts of things. On an interesting counterpoint, I was surprised to see how complicated it is to automatically begin editing an entry in a table after inserting it. I would have expected the corresponding NSArrayController to support this, since it is such a common thing to do.&lt;/p&gt;
&lt;p&gt;Let me know if you have any comments, or if you find anything broken.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Obama’s victory speech:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;McCain’s very gracious concession speech:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Nice photo essay: &lt;a href="http://wheresmynoose.blogspot.com/2008/11/history.html"&gt;History&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.patrickmoberg.com/november-4-2008.jpg"&gt;44 presidents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Summary of election-day coverage from CNN:&lt;/p&gt;

&lt;p&gt;Embedded video from &lt;a href="http://www.cnn.com/video"&gt;CNN Video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations to the U.S. on their new President!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you may need to adjust some of this to the specifics of the theme you are using, but the base mechanism is the same.&lt;/p&gt;

&lt;p&gt;In this technique, the assumption is that you have a directory with header images, located in images/headers under your theme directory (e.g. &lt;em&gt;/your/blog/directory/wp-content/themes/yourtheme/images/headers/&lt;/em&gt;). The code shown below will choose an image at random from this directory. The images should already have the appropriate size/ratio to be shown in your blog.&lt;/p&gt;

&lt;p&gt;Here’s the code, to insert instead of the existing &amp;lt;img&amp;gt; tag for your theme’s header image (most likely in header.php):&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;&amp;lt;?php
$curdir=getcwd(); chdir(get_template_directory() . &amp;quot;/images/headers&amp;quot;);
$files=glob(&amp;quot;*.{gif,png,jpg,gif}&amp;quot;, GLOB_BRACE);
chdir($curdir);
$file=$files[array_rand($files)];
?&amp;gt;
&amp;lt;img src=&amp;quot;&amp;lt;?php echo(get_bloginfo(&amp;#39;template_url&amp;#39;).&amp;quot;/images/headers/$file&amp;quot;); ?&amp;gt;&amp;quot; width=&amp;quot;770&amp;quot; height=&amp;quot;140&amp;quot; alt=&amp;quot;&amp;lt;?php bloginfo(&amp;#39;name&amp;#39;); ?&amp;gt; random header image&amp;quot; /&amp;gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Some things you may want to change:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The location of your images (if not under images/headers in your theme directory)&lt;/li&gt;

  &lt;li&gt;The size of the header images in the img tag&lt;/li&gt;

  &lt;li&gt;The filter for the images in the glob statement (currently it will grab any gif, png, jpg or gif files in that directory)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m not an expert PHP developer, so there may be a more efficient way of getting a random file from a directory, I’d be happy to learn about it.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/how-to-trick-an-rhel5-client-i"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p style="font:12.0px Courier"&gt;&lt;b&gt;message sent to deallocated instance 0xe02b790&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the debugger is automatically started. This can be very useful for debugging memory management problems. Instead of a crash, you get an informative error message.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/easy-video-conversion-in-mac-o"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;em&gt;When a class has multiple initializers, the designated initializer is the one that actually does the work, normally the one with the most parameters. All other initializers call the designated one, providing different amounts of default parameter values.&lt;/em&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was aware of the concept - many classes have initializers with varying numbers of parameters, with the “simplest” ones setting things to default values, and the more complex ones allowing greater control. I didn’t know the term.&lt;/p&gt;

&lt;p&gt;I found two other uses for the term &lt;em&gt;designated initializer&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In the C99 language specification, you can selectively initialize elements in an aggregate data structure, this construct is called a &lt;a href="http://gcc.gnu.org/onlinedocs/gcc/Designated-Inits.html"&gt;designated initializer&lt;/a&gt;.&lt;/li&gt;

  &lt;li&gt;It’s the title of a &lt;a href="http://www.youtube.com/watch?v=ajlESsRXqmM"&gt;song performed at WWDC 08&lt;/a&gt; by James Dempsey and the Breakpoints (of course, related to the Objective-C definition).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;I have recently started reading Aaron Hillegass’ excellent &lt;a href="http://www.librarything.com/work.php?book=36614868"&gt;Cocoa Programming for Mac OS X, third edition&lt;/a&gt;, with the intention of brushing up my very lacking Cocoa skills (&lt;a href="http://zzamboni.org/brt/code/copperexport/"&gt;all of them&lt;/a&gt; learned empirically by looking at &lt;a href="http://connectedflow.com/flickrexport/source/"&gt;other people’s code&lt;/a&gt; and reading the documentation). To motivate myself to actually make progress, I have decided to write every day (if possible) a short post describing something interesting I learned. Seasoned Cocoa developers might want to skip this, I’m doing it mostly for my own benefit. So without further ado, here’s the thing I learned today:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;em&gt;In Objective-C, you can invoke methods on nil objects, without causing an error&lt;/em&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not a Cocoa-specific tip, but very interesting nonetheless. And a possible source of hard-to-track errors, if you are not careful and try to call methods on nil objects assuming they are not nil.&lt;/p&gt;

&lt;p&gt;One interesting bit is that if the receiving object is of type “id”, it seemingly will accept any method, as long as it is defined for some class. If the method is not defined anywhere, you do get a “warning: no -foobaz method”. If the variable is defined as some specific class, it will accept all the methods for that class, and give appropriate warning for methods from other classes or nonexistent methods.&lt;/p&gt;

&lt;div&gt;&lt;br&gt;&lt;/div&gt;

&lt;div&gt;&lt;ol&gt;&lt;li&gt;In my work account (dza), switch to the AgileKeyChain format by &lt;a href="http://support.agilewebsolutions.com/showthread.php?p=66775"&gt;following the instructions&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Modify the ACL for my ~/Library/Application Support/1Password/ folder to allow my personal account (zamboni) read/write access. I did this using the “Sharing &amp;amp; Permissions” section of the Info dialog for the folder, and then choosing “Apply to enclosed items” from the cogwheel menu in that same section.&lt;/li&gt;&lt;li&gt;Switch to my personal account.&lt;/li&gt;&lt;li&gt;Quit 1Password, run the defaults command from the instructions, restart 1Password.&lt;/li&gt;&lt;li&gt;Export my existing 1Password data in the “1Password Interchange file” format. To do this, choose File -&amp;gt; Export all -&amp;gt; 1Password Interchange File, and save it to a file in my desktop.&lt;/li&gt;&lt;li&gt;Double click /Users/dza/Library/Application Support/1Password/1Password.agilekeychain and click “yes” to start using that file.&lt;/li&gt;&lt;li&gt;Import the data from step 5: File -&amp;gt; Import, and follow the prompts. Wait for the data to import.&lt;/li&gt;&lt;li&gt;Switch back to my work account and verify that the imported items are seen there as well.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;This is incredibly useful. I had been trying to use the &lt;a href="https://my.1password.com/"&gt;my1Password&lt;/a&gt; service to achieve this, but the service is still not very mature and I had been unsuccessful. With this, I can access my data from both accounts without having to send the data through the network or use any third-party services, which is great.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/synchronizing-1password-data-b"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For some time I have used Raymond Page’s bash prompt code (heavily based on the work by Giles Orr in the &lt;a href="http://gilesorr.com/bashprompt/"&gt;Bash Prompt HOWTO&lt;/a&gt;, you can get it at &lt;a href="http://gentoo-wiki.com/TIP_Prompt_Magic"&gt;http://gentoo-wiki.com/TIP_Prompt_Magic&lt;/a&gt; or &lt;a href="http://code.google.com/p/homenix/source/browse/"&gt;http://code.google.com/p/homenix/source/browse/&lt;/a&gt;, you need to get .prompt, .prompt_functions and .prompt_config from the trunk/ directory), which I like very much because it is highly customizable, and although a lot of the functions are Linux-specific, it can easily be made to work on Mac OS X. It features context-dependent prompt colorization (e.g. based on whether the current directory is writable and on the machine load), automatic shortening of the prompt based on window width, and many other features.&lt;/p&gt;

&lt;p&gt;More recently, I came across &lt;a href="http://www.macosxhints.com/article.php?story=20071009124425468"&gt;this hint&lt;/a&gt; for producing &lt;a href="http://growl.info/"&gt;Growl&lt;/a&gt; notifications for shell commands that run for more than a predefined length of time, which I find extremely useful for knowing when those commands have finished.&lt;/p&gt;

&lt;p&gt;Because both rely on some of the same mechanisms in bash, merging them is not completely straightforward. Here’s what I did:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download and install .preexec.bash as instructed in the hint.&lt;/li&gt;
&lt;li&gt;Add the preexec() function and preexec_install call to your .bashrc or .bash_login file (as instructed)&lt;/li&gt;
&lt;li&gt;Add the code from the precmd() function in the hint to the &lt;strong&gt;preexisting precmd() function&lt;/strong&gt; in the .prompt file. I added it at the end. This is the main difference from what is described in the hint. I added it at the very end of the function.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it - a nice bash prompt with growl notifications for long-running commands.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/adding-growl-notification-to-g"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/updated-script-for-defining-a"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;
&lt;code&gt;Mail[365]: AddressBook failed to save: Error Domain=NSCocoaErrorDomain Code=259 UserInfo=0×10c9a810 “The file MailRecents-v4.abcdmr€  could not be opened because it is not in the right format.” ({\n  NSFilePath = “/Users/dza/Library/Application Support/AddressBook/MailRecents-v4.abcdmr”;\n  NSUnderlyingException = Fatal error. The database at /Users/dza/Library/Application Support/AddressBook/MailRecents-v4.abcdmr is corrupted. SQLite error code:1;\n})&lt;/code&gt;&lt;br&gt;  &lt;br&gt; While trying to figure out what was wrong, I discovered that the file for some reason had an ACL that prevented everyone (including me!) from modifying it: &lt;br&gt;  &lt;br&gt;&lt;code&gt;~/Library/Application Support/AddressBook $ /bin/ls -lea MailRecents-v4.abcdmr &lt;br&gt; -rw——-@ 1 dza staff 102400 Feb 4 2008 MailRecents-v4.abcdmr &lt;br&gt;  0: group:everyone deny write,delete,append,writeattr,writeextattr,chown&lt;/code&gt; &lt;br&gt;  &lt;br&gt; So I removed the ACL: &lt;br&gt;  &lt;br&gt;&lt;code&gt;$ /bin/chmod -a# 0 MailRecents-v4.abcdmr&lt;/code&gt;&lt;br&gt;  &lt;br&gt; And the error is gone! The file was not corrupted, but Mail could simply not write to it. The puzzling part is how did that ACL end up there…&lt;/p&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/fixing-mailapps-recent-mail-ad"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="http://posterous.com/getfile/files.posterous.com/zzamboni/W1VF6XaRiwGobSbOEcuBoGbWjoqzqi4W6hvoU3bcJtqzvbZeMFRjbaPOg8Aa/20080901101357715.png.scaled.1000.jpg"&gt;&lt;img src="https://posterous.com/getfile/files.posterous.com/zzamboni/cKlAndbxNHogTv9s0VtvoPR5kyeQTnVXWHoRLDp7mOVveaU4c67Hr9S2FJWl/20080901101357715.png.scaled.500.jpg" width="356" height="500"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/my-gtd-system"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="http://posterous.com/getfile/files.posterous.com/zzamboni/hBjtvtyYpETVYO2Jc0C5YcOB0Jc9XLh1ThZbUhKUUoNmgE1LD1QMTAELUqbM/DSC00002_2.jpg"&gt;&lt;img src="https://posterous.com/getfile/files.posterous.com/zzamboni/trBN9PVO1EIcS5C78w2WNQ3OVBLTviAq9I4fshzcD0ROCylIs2hiS2aF7OBp/DSC00002_2.jpg.scaled.500.jpg" width="375" height="500"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="http://posterous.com"&gt;Posted by email&lt;/a&gt; from &lt;a href="http://zzamboni.posterous.com/testing-posterous-57"&gt;zzamboni’s posterous&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, I haven’t posted anything in so long that I wonder if anyone will even notice. That’s what having a second baby will do to you &lt;img src="http://zzamboni.org/brt/wp-includes/images/smilies/icon_smile.gif" alt=":-)"&gt; &lt;/p&gt;

&lt;p&gt;Download the script: &lt;a href="https://plum.ibao.net/vhosts/zzamboni.org/brt/wp-content/uploads/hispeedsend.pl"&gt;hispeedsend.pl&lt;/a&gt;. You also need the &lt;a href="http://search.cpan.org/~petdance/WWW-Mechanize-1.34/lib/WWW/Mechanize.pm"&gt;WWW::Mechanize&lt;/a&gt; and &lt;a href="http://search.cpan.org/~dland/Crypt-SSLeay-0.57/SSLeay.pm"&gt;Crypt::SSLeay&lt;/a&gt; (for SSL support) packages.&lt;/p&gt;

&lt;p&gt;How to use it:&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;hispeedsend.pl [--login=login] [-pass=pass] phonenumber message&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;You can hardcode the login and password in the script to avoid specifying them every time - see the top of the script.&lt;/p&gt;


&lt;ul&gt;
  &lt;li&gt;In one of the two accounts, I created a symlink from ~/Library/Application Support/Cultured Code into the corresponding directory of the other account (my two accounts are named “dza” and “zamboni”, and I created the symlink in “zamboni”:
    &lt;pre&gt;
&lt;code&gt;zamboni% cd Library/Application\ Support&lt;br&gt;zamboni% ln -s ~dza/Library/Application\ Support/Cultured\ Code .&lt;/code&gt;
&lt;/pre&gt;

    &lt;p&gt;This makes Things access the same files regardless of which account uses it.&lt;/p&gt;
  &lt;/li&gt;

  &lt;li&gt;Make sure that both accounts can read &lt;em&gt;and&lt;/em&gt; write from that directory. In my case, both my accounts belong to the “staff” group, so I simply give the files group-write permissions (you have to do this from the account where the original files are, or from root):
    &lt;pre&gt;
&lt;code&gt;dza% chgrp -R staff ~/Library/Application\ Support/Cultured\ Code&lt;br&gt;dza% chmod -R g=u ~/Library/Application\ Support/Cultured\ Code&lt;/code&gt;
&lt;/pre&gt;
  &lt;/li&gt;

  &lt;li&gt;You have to make sure Things is only run &lt;strong&gt;from one account at a time&lt;/strong&gt;, to avoid them overwriting each other’s changes. To automatically achieve this, I wrote a small script that kills Things if it’s being run by someone else and then runs it in the current account. Simply killing the process is a bit crude, but Things seem to process the signal properly, I have never lost any data by doing this. Here is the script (I saved it as /usr/local/bin/things_launcher):
    &lt;pre&gt;
&lt;code&gt;#!/bin/bash&lt;br&gt;# If it’s running as any user other than me, kill it&lt;br&gt;if ps axuwww | grep Things | grep -v “^$USER”; then&lt;br&gt;sudo killall Things&lt;br&gt;sleep 1&lt;br&gt;fi&lt;br&gt;# Now run or activate it&lt;br&gt;open -a Things&lt;/code&gt;
&lt;/pre&gt;
(note: this will only work if you have set up sudo on your machine to execute commands without asking for your password - I am still figuring out how to use the standard authentication dialog in OSX)
  &lt;/li&gt;

  &lt;li&gt;Now for the final touch, I used &lt;a href="http://www.sveinbjorn.org/platypus"&gt;Platypus&lt;/a&gt; to create an Application wrapper around my script, so that I can run it using Quicksilver. I named it “Things wrapper”, and you can download it &lt;a href="http://zzamboni.org/brt/wp-content/uploads/Things_wrapper.zip"&gt;here&lt;/a&gt; (or you can create your own using Platypus). I gave it the Things icon, but maybe someone with more artistic talent can come up with a better, more representative icon…&lt;br&gt;&lt;/li&gt;

  &lt;li&gt;That’s it! Just run “Things wrapper” instead of Things, and it will automatically kill other copies of Things, and run it in the local account. If you have it already running, it will simply activate it.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
update blog_posts set post_content=replace(replace(post_content, &amp;#39;[gallery]&amp;#39;, &amp;#39;&amp;lt;gallery&amp;gt;&amp;#39;), &amp;#39;[/gallery]&amp;#39;, &amp;#39;&amp;lt;/gallery&amp;gt;&amp;#39;) where post_content like &amp;#39;%[gallery]%&amp;#39;;
&lt;/pre&gt;

&lt;p&gt;

&lt;pre&gt;&lt;code&gt;
for i in $(ls -Rl@ | grep &amp;#39;^      &amp;#39; | awk &amp;#39;{print $1}&amp;#39; | sort -u); \
   do echo echo Removing $i ... &amp;gt;&amp;amp;2;  \
   find . | xargs xattr -d $i 2&amp;gt;/dev/null ; done
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;A few days ago, CERIAS was named as the &lt;a href="http://news.uns.purdue.edu/x/2008a/080502SpaffordRanking.html"&gt;top program in information security among U.S. universities&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;Here it is, use at your own risk (&lt;a href="http://zzamboni.org/brt/files/uploads/plistgrep.pl"&gt;Download link&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/perl
# Usage: plistgrep regex file.plist [...]

use strict;

my $regex=qr($ARGV[0]);

shift @ARGV;

foreach my $i (@ARGV) {
  plistgrep($regex, $i);
}

sub plistgrep {
  my $r=shift;
  my $file=shift;
  my @text=plistread($file);
  print map { &amp;quot;$file: $_&amp;quot; } grep(/$r/, @text);
}

sub plistread {
  my $file=shift;
  my $type=`/usr/bin/file &amp;quot;$file&amp;quot;`;
  my @result;
  if ($type =~ /Apple binary property list/) {
    open F, &amp;quot;plutil -convert xml1 -o - &amp;amp;apos;$file&amp;amp;apos; |&amp;quot;
      or die &amp;quot;Error running plutil command: $!\n&amp;quot;;
  }
  else {
    open F, &amp;quot;&amp;lt;$file&amp;quot;
      or die &amp;quot;Error opening file $file: $!\n&amp;quot;;
  }
  @result=&amp;lt;F&amp;gt;;
  close F;
  return @result;
}


&lt;p&gt;The good news is that I am still keeping my daily, handwritten, detailed logs. The logs have helped me identify interruptions, which has in turn helped me to establish measures for avoiding those interruptions (e.g. turn off IM/Mail, close my door when I’m working on something).&lt;/p&gt;

&lt;p&gt;The bad news is that it requires discipline to keep it up. I have found it easy to slip in the sense of not recording everything I do (which is the crux of the technique - every little thing has to bee there) and after a few hours have passed, just back-filling it with what I think was most relevant). Some days in which I have been really low on energy or motivation, I have simply stopped writing. But the positive side is that, even for those “bad” days, keeping the log helps to realize when they happened. And I think it’s OK: everyone has good days and bad days. The log has helped me to keep track of both of them, and hopefully to fix what I can.&lt;/p&gt;


&lt;p&gt;&lt;span style="color:black;width:150px;background:white;border-width:1px 0px 1px 0px;border-style:double;border-color:--;float:right;padding:0.2em;margin:1em;font-family:Verdana,Arial, Helvetica,Georgia;font-size:24px;line-height:26px;text-align:right"&gt;&lt;span&gt;I &lt;/span&gt;&lt;b&gt; &lt;/b&gt;take &lt;br&gt;&lt;b&gt;&lt;/b&gt;as &lt;br&gt;&lt;b&gt;personal &lt;/b&gt;time &lt;br&gt;&lt;b&gt;whatever is &lt;/b&gt;left &lt;br&gt;&lt;b&gt;of &lt;/b&gt;my &lt;br&gt;&lt;b&gt;&lt;/b&gt;lunch&lt;span&gt; hour&lt;/span&gt;&lt;/span&gt;My new technique is to take as PT whatever is left of my lunch hour when I get back to my office. If I have a quick lunch, I could have a full 45-minute stretch, or if I prefer to stay longer to talk to people during lunch, I would have to content myself with little or no time. Normally I get about 15 minutes, which is about the same I was doing before.&lt;/p&gt;


&lt;p&gt;Since I started using &lt;a href="http://en.wikipedia.org/wiki/Getting_Things_Done"&gt;GTD&lt;/a&gt; a few years ago, I have used several applications for the computer-based side of my task management (which is where almost everything else eventually ends up). In chronological order, I have used:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The standard applications on my (aging) &lt;a href="http://the-gadgeteer.com/review/sony_clie_peg_n710c_review"&gt;Palm device&lt;/a&gt; together with &lt;a href="http://www.jpilot.org/"&gt;JPilot&lt;/a&gt; on the desktop (Linux) side, following the &lt;a href="http://pigpog.com/node/1031"&gt;PigPog method&lt;/a&gt; for connecting actions to projects. This worked fine for the most part, but required a lot of manual rearranging of things. At some point I found…&lt;/li&gt;

  &lt;li&gt;&lt;a href="http://thinkingrock.com.au/"&gt;ThinkingRock&lt;/a&gt;, which is the most faithful-to-GTD application out there. It strictly enforces the &lt;a href="http://www.davidco.com/store/catalog/WorkFlow-Diagram-Advanced-p-16193.php"&gt;GTD workflow&lt;/a&gt;. This was my preferred application until I moved from Linux to a Mac as my work machine. I still consider ThinkingRock to be one of the best applications out there, but since it is written in Java, it does not integrate all that well into the Mac environment, so I decided to search for more Mac-like options.&lt;/li&gt;

  &lt;li&gt;&lt;a href="http://igtd.pl/iGTD/index.html"&gt;iGTD&lt;/a&gt; is one of the most popular GTD applications for the Mac. It shines in the integration department! Its &lt;a href="http://igtd.pl/iGTD/help/usingtasks/adding/fkey/index.html"&gt;F-key trick&lt;/a&gt; allows the use of a single key (F6 by default) to automatically create a new task containing the currently selected object (depending on the application - Safari URL, Mail message, selected text in an editor, etc.). I found a &lt;a href="http://igtd.pbwiki.com/Convert+from+other+programs"&gt;script to migrate from ThinkingRock to iGTD&lt;/a&gt;, so I was able to migrate quickly. Unfortunately, iGTD (at least iGTD 1.x, I have not tried the 2.x alpha) has many lackings in terms of GUI design. Some panels are arbitrarily not-resizable, and in general it feels very complex. I never “clicked” with iGTD, so I kept looking for alternatives.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;…and the present: Things&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-icon.png" width="128" height="128" alt="Things application icon"&gt; Which brings me to the latest application in my toolbox: &lt;a href="http://culturedcode.com/things/"&gt;Things&lt;/a&gt;. Things’ strength is its simplicity. It has very little built-in structure, allows you to use tags extensively, and it is visually very pleasant.&lt;/p&gt;

&lt;p&gt;Other people have already written excellent &lt;a href="http://powell.newsvine.com/_news/2007/11/23/1117611-a-preview-of-things-mac-gtd-at-its-best"&gt;full&lt;/a&gt; &lt;a href="http://www.viewfromthedock.com/2008/02/04/gtd-based-task-management-apps-v-things/"&gt;reviews&lt;/a&gt; of Things, so instead of doing one more full review, I want to write about the aspects that have made Things particularly useful to me.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Little imposed structure: Inbox, Time-related focus, projects and areas of responsibility:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-sidebar.png" title="Things sidebar" rel="lightbox"&gt;&lt;img src="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-sidebar-tm.jpg" width="101" height="100" alt="Things sidebar" title="Things sidebar"&gt;&lt;/a&gt; This subdivision is the only fixed structure that Things will impose upon you. Inbox is where you collect your stuff as it appears (although you can also file it directly in some of the other areas), Today is where tasks that you have marked as “must do today” appear, Next is where all your future tasks are listed, Someday are things that you have left for some undefined time in the future (this is GTD’s “Someday/maybe” list), and Postponed is things that you have left for some defined time in the future (this is an electronic &lt;a href="http://en.wikipedia.org/wiki/Tickler_file"&gt;tickler file&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Projects and Areas allow you to group your tasks into Projects (related sets of actions that correspond to a particular objective, that in the end can be marked as completed) and Areas of responsibility (ongoing areas of interest which may never be completed). Things is the only GTD program I have seen that handles Areas, and I find them incredibly useful in the following ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I try to make sure that every task and project I create fits in one of the Areas I have defined. These are supposed to be all the “high-level functions” in my life, and if one task does not fit in any of them, then either the task is unimportant or there is an area that I have overlooked so far. Areas cover everything for both work (”Write papers”, “File patents”, “Research”) and personal life (”Family life”, “Health”, “Home and car maintenance”), as well as areas that cover both work and personal items (”IT infrastructure maintenance”, “Blogging”, “Productivity”).&lt;/li&gt;

  &lt;li&gt;&lt;a href="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-projects-overview.jpg" title="Things project overview screen" rel="lightbox"&gt;&lt;img src="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-projects-overview-tm.jpg" width="176" height="100" alt="things-projects-overview.png" title="Things project overview screen"&gt;&lt;/a&gt; I find them very useful for doing my &lt;a href="http://zenhabits.net/2007/02/weekly-review-key-to-gtd-and-achieving/"&gt;weekly review&lt;/a&gt;. For me, Areas are what David Allen would call “larger outcomes”, and so I go through the list, ensuring that I am doing something on each of those areas. I do the same for projects. Things has very nice overview screens for both Projects and Areas, in which you can see how many items you have in each one of them, and for projects, gives you an indication of their level of completion (how many of the tasks in the project have been marked as done). One nice feature is in that you can navigate these overview screens using the keyboard to select a project/area, and you can use the Right-arrow key to view the items it contains, and then Left-arrow to go back to the overview. Using the keyboard, it is very easy and efficient to review all the areas and projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2) Tagging: create your own structure:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-tags.png" title="Things tags dialog, showing my tag structure" rel="lightbox"&gt;&lt;img src="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-tags-tm.jpg" width="56" height="100" alt="My tags structure" title="Things tags dialog, showing my tag structure"&gt;&lt;/a&gt; I find tags incredibly useful. I use tags for the following purposes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;General areas: work, personal and meetings (I keep track of meetings in Things, but I don’t want to see them all the time, so I define a different tag for them)&lt;/li&gt;

  &lt;li&gt;Traditional GTD contexts (home, office, errand, waiting for)&lt;/li&gt;

  &lt;li&gt;People agendas (my boss, my wife, other specific people or places)&lt;/li&gt;

  &lt;li&gt;Time indicators of how long the task will take to complete (I use only 10, 30 and 60 minutes).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Using the Things tag bar, you can quickly filter any of the views to see only the appropriate tasks. You can assign one-key shortcuts to tags, so you can quickly add and remove tags to tasks by pressing them while the task is selected. You can also apply tags to projects and areas.&lt;/p&gt;

&lt;p&gt;One thing that I wish Things would implement is persistence in the selection of tags. As it is now, if I do my tag selection in the “Today” view and then switch to “Next”, when I go back to “Today” all the tasks are shown again, and I have to re-select tags. It would be nice if each view remembered the set of tags that were last selected. Even nicer would be to allow creation of custom views, based on any of the preexisting ones, but with a certain set of tags always pre-selected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) System integration and quick entry:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Things allows you to set a system-wide hotkey to invoke its quick-entry dialog, where you can enter a task, and optionally specify tags, type some notes, and decide where to file it (it goes in the Inbox by default).&lt;/p&gt;

&lt;p&gt;&lt;a href="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-quickentry.png" title="Things quick-entry dialog, showing a couple of links in the Notes field" rel="lightbox"&gt;&lt;img src="http://zzamboni.org/brt/wp-content/uploads/2008/02/things-quickentry-tm.jpg" width="200" height="65" alt="Things quick entry dialog" title="Things quick-entry dialog, showing a couple of links in the Notes field"&gt;&lt;/a&gt; One feature that I find very useful is the ability to drag any link into the notes field, and Things will recognize it correctly. This obviously includes URLs from Safari, but you can also drag email messages, files or folders, and &lt;a href="http://journler.com/"&gt;Journler&lt;/a&gt; entries. This makes it possible to have at your disposal any relevant information you need to do it. When you click on the links, the corresponding item in the correct program will open.&lt;/p&gt;

&lt;p&gt;There are some applications from which you cannot drop links into Things tasks, one notorious example is AddressBook. I think this is because when you drag an entry from AB, it gives you not a link, but actually a copy of the record. This is controlled by AB, but I think it would be very useful if Things somehow recognized this and did the right thing by creating a link to the correct AB entry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4) The development team:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is something that has impressed me very positively from the start - the Things development team is incredibly friendly, and goes to great lengths to stay in touch with the users, to get their feedback, and to provide them with information about what is going on. When the Things alpha program started (in which I was lucky to get quite early), they had only a &lt;a href="http://culturedcode.com/things/wiki/index.php?title=Welcome"&gt;wiki&lt;/a&gt; for users to enter their experiences and for them to provide information. Pretty soon they added a &lt;a href="http://culturedcode.com/things/blog/"&gt;blog&lt;/a&gt;, some time later they added a feedback window built into Things, then they started a &lt;a href="http://twitter.com/culturedcode/"&gt;Twitter feed&lt;/a&gt; to keep users updated of the latest developments, and just yesterday they announced the &lt;a href="http://culturedcode.com/things/forums/"&gt;forums&lt;/a&gt;. And it’s not just that they create these mechanisms - they actively participate in them, and give us detailed information about what is happening on their side. One great example is &lt;a href="http://culturedcode.com/things/blog/2008/02/habemus-dialogum-we-have-a-dialog.html"&gt;this blog post&lt;/a&gt; in which they describe the evolution of their “recurring task” dialog, their design criteria, and show all the different attempts until they found the perfect one. Very rarely does one get to see this “behind the scenes” process, and to me it inspires trust that these guys really care about their users, and really want to make their product a good one. They are building a very nice user community, and this is one of the best things to which a software product can aspire.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Loose ends&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another nice thing is that the Things database is stored as an XML file. Although I have not played with it much yet, this should make it relatively easy to do interesting things with it, such as displaying it online, formatting for different purposes using XSL transformations, or maybe even automatically augmenting it with information collected from different places.&lt;/p&gt;

&lt;p&gt;So what’s missing from Things at the moment? Notably:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Printing (you can print, but the results are not pretty)&lt;/li&gt;
  &lt;li&gt;iCal/iSync synchronization. This is essential - with iGTD I was able (for example) to create a new task on my cellphone, and have it synchronized back to iCal and from there to my Inbox for processing. It would be nice to have this ability back.&lt;/li&gt;

  &lt;li&gt;Things is not completely navigable using the keyboard - for example, there is no shortcut for creating a new project, and you can’t even assign one using the system-wide Keyboard shortcuts facility in the Keyboard preference panel, because there is no menu entry for that action, it exists only in an action menu inside the Things window.&lt;/li&gt;

  &lt;li&gt;No AppleScript support yet, that I can tell. This is really important for even better integration with the rest of the system.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;The solution was to download the &lt;a href="http://www.apple.com/support/downloads/macosx1052comboupdate.html"&gt;combo update package&lt;/a&gt; to my wife’s machine, connect my machine to hers in &lt;a href="http://docs.info.apple.com/article.html?artnum=58583"&gt;Firewire target mode&lt;/a&gt;, and install the update from her machine onto mine’s disk. In the end the update succeeded, and my machine is back up now. Phew.&lt;/p&gt;

&lt;p&gt;There are several nice things in this update, including a Time Machine menubar item (I can finally get rid of TM’s dock icon!), the ability to handle folders in the dock as either stacks or folders, and a new “List view” for stacks that makes it easier to browse through very long lists. I personally like the translucent menu bar, but there is finally an option to turn it off. The list also includes Active Directory improvements, I’ll have to wait and see if some of the long-authentication-wait problems I was having (we use AD at work) are resolved, as well as some of the IEEE 802.1X wireless authentication problems I was having (intermittent failures in authentication, mostly).&lt;/p&gt;


&lt;blockquote&gt;  &lt;p&gt;&lt;span style="font-style:italic"&gt;Keep a &lt;strong&gt;handwritten&lt;/strong&gt;, &lt;strong&gt;detailed&lt;/strong&gt; log of your daily activities.&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I have been using &lt;a href="http://en.wikipedia.org/wiki/Getting_Things_Done"&gt;GTD&lt;/a&gt; for some time now, and my problem has always remained in the last step: actually doing the things in my actions list. I am easily distracted, and distractions abound: people asking questions, email, web, things that need fixing, installing or upgrading on my machine, etc. I am working on something, and when I notice, I’ve gone in an hour-long unrelated tangent, and at the end of the day I wonder where my time went without getting anything done.&lt;/p&gt;

&lt;p&gt;&lt;span style="color:black;width:150px;background:white;border-width:1px 0px 1px 0px;border-style:double;border-color:--;float:right;padding:0.2em;margin:1em;font-family:Verdana,Arial, Helvetica,Georgia;font-size:24px;line-height:26px;text-align:right"&gt;&lt;span&gt;Keeping &lt;/span&gt;&lt;b&gt; &lt;/b&gt;a &lt;br&gt;&lt;b&gt;&lt;/b&gt;log &lt;br&gt;&lt;b&gt;tricks &lt;/b&gt;my &lt;br&gt;&lt;b&gt;brain into &lt;/b&gt;thinking &lt;br&gt;&lt;b&gt;someone &lt;/b&gt;is &lt;br&gt;&lt;b&gt;watching over &lt;/b&gt;my&lt;span&gt; shoulder&lt;/span&gt;&lt;/span&gt;Since the beginning of the year, I have been keeping a handwritten log of what I am doing at the moment - no matter how short (”make coffee”) or trivial (”go to the restroom”), if it’s a separate thing, it goes into the log with a time stamp.&lt;/p&gt;

&lt;p&gt;The result has been amazing! For me, keeping the log seems to trick my brain into thinking someone is watching me, which keeps me from goofing off too much.&lt;/p&gt;

&lt;p&gt;Let’s break down the two main characteristics of the log:&lt;/p&gt;

&lt;ul&gt;  &lt;li&gt;&lt;span style="font-style:italic"&gt;Handwritten.&lt;/span&gt; I have tried keeping electronic logs before, but it never worked out - I always forgot to enter things into the log. This time I just grabbed a lined notepad and I start a new page every day. Having the notepad on my desk helps in not forgetting to write things down, plus it makes the log impervious to machine failures, reboots or other situations in which the electronic log would be inaccessible. It also gives you a nice tangible thing to look at at the end of the day to see what you have achieved. You can embellish it a little: I draw arrows connecting multiple entries across interruptions (helps in realizing how many interruptions there are during the day) and draw a little check mark next to each work-related task I finish, which gives me a nice “see how much I did today” feeling at the end.&lt;/li&gt;  &lt;li&gt;&lt;span style="font-style:italic"&gt;Detailed.&lt;/span&gt; This is crucial - you really have to be honest with yourself, and record everything you do. Phone rings? Into the log. Go to the restroom? Log. Someone IM’s you with a question? Log. Choose a next action from your list to work on? Log. Keeping a detailed log helps in really analyzing where your time is going. Before, I would think “I spent all afternoon writing a paper review”. Now I realize that was the main task, but there were 10 interruptions of different types (some made by me, some by others) that greatly reduced the actual time I spent on my work.&lt;/li&gt;&lt;/ul&gt;


&lt;ol&gt;  &lt;li&gt;Download and install the Mono package for OSX from the &lt;a href="http://www.mono-project.com/Downloads"&gt;Mono downloads page&lt;/a&gt;.&lt;/li&gt;  &lt;li&gt;If you don’t have subversion, install it. I personally like the packages from &lt;a href="http://homepage.mac.com/hiirem/svkbuilds.html"&gt;http://homepage.mac.com/hiirem/svkbuilds.html&lt;/a&gt;.&lt;/li&gt;  &lt;li&gt;Make sure you have Xcode installed (for the make command below)&lt;/li&gt;  &lt;li&gt;Fix nant, as documented &lt;a href="http://bleepsoft.com/tyler/index.php?itemid=82"&gt;here&lt;/a&gt;. Essentially, edit /usr/bin/nant and add the line in bold:&lt;br&gt;    &lt;pre&gt;&lt;code&gt;#!/bin/sh
&lt;b&gt;export PKG_CONFIG_PATH=/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig&lt;/b&gt;
exec /Library/Frameworks/Mono.framework/Versions/1.2.6/bin/mono /Library/Frameworks/Mono.framework/Versions/1.2.6/lib/NAnt/NAnt.exe “$@”&lt;/code&gt;&lt;/pre&gt;  &lt;/li&gt;  &lt;li&gt;Check out and build opensim:    &lt;pre&gt;&lt;code&gt;% svn co http://opensimulator.org/svn/opensim/trunk opensim
% cd opensim
% ./runprebuild.sh
% nant&lt;/code&gt;&lt;/pre&gt;  &lt;/li&gt;  &lt;li&gt;Compile libopenjpeg-libsl-2.1.2.0.dylib from source (this is mentioned in the &lt;a href="http://opensimulator.org/wiki/Installation#MacOSX"&gt;OpenSim wiki&lt;/a&gt;) and copy it into the opensim/bin directory:    &lt;pre&gt;&lt;code&gt;% svn co svn://opensecondlife.org/libsl/trunk libsecondlife
% cd libsecondlife/openjpeg-libsl/
% make -f Makefile.osx
% cp libopenjpeg-libsl-2.1.2.0.dylib ../../opensim/bin&lt;/code&gt;&lt;/pre&gt;  &lt;/li&gt;  &lt;li&gt;Run opensim:    &lt;pre&gt;&lt;code&gt;% cd ../../opensim/bin

&lt;p&gt;It occurred to me that I could use &lt;a href="http://en.wikipedia.org/wiki/Launchd"&gt;launchd&lt;/a&gt; to automatically re-launch QS when it crashes. It works very nicely, here’s what I did:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In the QS preferences, disable “start at login”&lt;/li&gt;

  &lt;li&gt;Create a new LaunchAgent in my account by storing the following file as ~/Library/LaunchAgents/org.quicksilver.plist (actually I used &lt;a href="http://lingon.sourceforge.net/"&gt;Lingon&lt;/a&gt; to create the file - very handy utility!):
    &lt;pre&gt;
&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot; &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;
&amp;lt;plist version=&amp;quot;1.0&amp;quot;&amp;gt;
&amp;lt;dict&amp;gt;
        &amp;lt;key&amp;gt;KeepAlive&amp;lt;/key&amp;gt;
        &amp;lt;true/&amp;gt;
        &amp;lt;key&amp;gt;Label&amp;lt;/key&amp;gt;
        &amp;lt;string&amp;gt;org.quicksilver&amp;lt;/string&amp;gt;
        &amp;lt;key&amp;gt;ProgramArguments&amp;lt;/key&amp;gt;
        &amp;lt;array&amp;gt;
                &amp;lt;string&amp;gt;/Applications/Quicksilver.app/Contents/MacOS/Quicksilver&amp;lt;/string&amp;gt;
        &amp;lt;/array&amp;gt;
&amp;lt;/dict&amp;gt;
&amp;lt;/plist&amp;gt;
&lt;/code&gt;
&lt;/pre&gt;
  &lt;/li&gt;

  &lt;li&gt;Log out and back in - voila! QS is started automatically, and if it dies for any reason, launchd will automatically restart it.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I found the files in &lt;a href="http://www.jbrain.com/pub/cbm/mags/cg/GazetteDisks/"&gt;this archive of Gazette disks&lt;/a&gt; (the program is in file 089SEP91.ZIP), extracted them using the &lt;a href="http://www.infinite-loop.at/Power64/index.html"&gt;Power64 emulator&lt;/a&gt;, and decoded the program listing using David Viner’s &lt;a href="http://www.davidviner.com/cbmlister.php" title="Untitled"&gt;Commodore Basic Program Lister&lt;/a&gt;. For extracting the text of the article I used the &lt;a href="http://www.viceteam.org/"&gt;VICE&lt;/a&gt; emulator’s feature for emulating a printer using a text file.&lt;/p&gt;

&lt;p&gt;And because no program description is complete without screenshots, here they are. Full screen interface, fancy editing capabilities… not too shabby for 282 lines of code!&lt;/p&gt;


&lt;p&gt;For example, to query a user by UID with getent, you would run:&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;getent passwd &amp;lt;uid&amp;gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;With dscl, you could do something like this:&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;dscl . -search /Users UniqueID &amp;lt;uid&amp;gt;&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;In both cases, you then need to parse the output to get the username. The output of getent is standard /etc/passwd format, something like this:&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;zamboni:x:1005:1005:Diego Zamboni,,,:/home/zamboni:/bin/bash
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;This is very easy to parse (using awk, for example) and gives you the full record at once.&lt;/p&gt;

&lt;p&gt;dscl only provides the field you searched for, something like this:&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;zamboni              UniqueID = (
    501
)&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;So if you want to get the full record, you would need to get the username and then query for it, like this:&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;dscl . -read /Users/zamboni&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;The output is harder to parse, in “keyword: value” form, but with many multiline values. You can also use the -plist option to get it in Apple’s &lt;a href="http://en.wikipedia.org/wiki/Property_list"&gt;plist&lt;/a&gt; format, which could be easier to parse.&lt;/p&gt;

  On November 18, 2007, noted computer pioneer James P. Anderson, Jr., died at his home in Pennsylvania. Jim, 77, had finally retired in August. [From &lt;a href="http://www.cerias.purdue.edu/weblogs/spaf/general/post-135/passing-of-a-pioneer/"&gt;&lt;cite&gt;CERIAS Weblogs » Passing of a Pioneer&lt;/cite&gt;&lt;/a&gt;]
&lt;/blockquote&gt;


&lt;p&gt;Here’s how I added a “Login Information” wallet item to store arbitrary username/passwords for different services. Fortunately, 1Password seems to be nicely modularized, and wallet types are defined in separate files for the most part (the only exception being the localized strings). I based my work off the pre-defined “MySQL Database” wallet item, which seemed the most similar to what I needed.&lt;/p&gt;

&lt;p&gt;So here are the steps I followed:&lt;/p&gt;

&lt;p&gt;(note: I have automated these steps in a &lt;a href="http://zzamboni.org/brt/wp-content/uploads/install_1password_new_wallet_items.pl"&gt;Perl script&lt;/a&gt; - use with care once you have done the steps manually)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Quit 1Password. Make a copy of /Applications/1Password.app and of your data (/Users/zamboni/Library/Keychains/1Password.keychain) in case anything goes wrong.&lt;/li&gt;

  &lt;li&gt;The rest of these steps take place inside /Applications/1Password.app/. You can either work from the terminal or open it from the Finder (right click on the app icon and choose “Show package contents”).&lt;/li&gt;

  &lt;li&gt;Copy Contents/Resources/datatypes/2902-mysql.js to Contents/Resources/datatypes/2904-login.js, and edit it to look like this:&lt;br&gt;
    &lt;pre&gt;
&lt;code&gt;{
  "class":"wallet.computer.LoginInformation",
  "contents":[
    {
      "set":"",
      "disclosed":"yes",
      "fields":[
        { "name":"hostname", "type":"string" },
        { "name":"service", "type":"string" },
        { "name":"username", "type":"string" },
        { "name":"password", "type":"concealed" }
      ]
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
This defines the fields that will be used by the new wallet type. I think the numbering is arbitrary, but 2904 is the next unused number after “2903-router.js”, which is the last one in the “Computer and Network Information” section of the “Add Wallet Item” dialog in 1Password.
  &lt;/li&gt;

  &lt;li&gt;Copy Contents/Resources/English.lproj/DetailView/standard/wallet.computer.MySQLConnection.html to Contents/Resources/English.lproj/DetailView/standard/wallet.computer.LoginInformation.html (the name has to match the “class” defined in the .js file above). This defines how the wallet item will be displayed when viewed in the list. I modified it to look like this:
    &lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;&amp;lt;img class=&amp;quot;titleIcon&amp;quot; src=&amp;quot;[template.baseURL]/WalletIcon.png&amp;quot; width=&amp;quot;32&amp;quot; height=&amp;quot;32&amp;quot; alt=&amp;quot;Secure Note&amp;quot; /&amp;gt;[object.title.html]&amp;lt;input type=&amp;quot;button&amp;quot; class=&amp;quot;editTop&amp;quot; value=&amp;quot;Edit&amp;quot; onclick=&amp;quot;javascript:controller.editObject(&amp;amp;apos;[object.uuid]&amp;amp;apos;)&amp;quot; /&amp;gt;&amp;lt;/h1&amp;gt;

&amp;lt;div class=&amp;quot;contentPadding&amp;quot;&amp;gt;

&amp;lt;p class=&amp;quot;notes&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;label&amp;quot;&amp;gt;Notes:&amp;lt;/span&amp;gt;[object.notesHTML]&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  
&amp;lt;table class=&amp;quot;dynamicFields&amp;quot; cellpadding=&amp;quot;0&amp;quot; cellspacing=&amp;quot;0&amp;quot;&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;th&amp;gt;&amp;lt;span class=&amp;quot;name&amp;quot;&amp;gt;Hostname:&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;span class=&amp;quot;value&amp;quot;&amp;gt;[object.secureContents.hostname.html]&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;th&amp;gt;&amp;lt;span class=&amp;quot;name&amp;quot;&amp;gt;Service:&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;span class=&amp;quot;value&amp;quot;&amp;gt;[object.secureContents.service.html]&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;th&amp;gt;&amp;lt;span class=&amp;quot;name&amp;quot;&amp;gt;Username:&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;span class=&amp;quot;value&amp;quot;&amp;gt;&amp;lt;a class=&amp;quot;copy&amp;quot; href=&amp;amp;apos;javascript:controller.copyToClipboardFieldOfObject(&amp;quot;secureContents.username&amp;quot;, &amp;quot;[object.uuid]&amp;quot;)&amp;amp;apos;&amp;gt;[object.secureContents.username.html]&amp;lt;span class=&amp;quot;copyButton&amp;quot;&amp;gt;Copy&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;th&amp;gt;&amp;lt;span class=&amp;quot;name&amp;quot;&amp;gt;Password:&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;span class=&amp;quot;value&amp;quot;&amp;gt;&amp;lt;a class=&amp;quot;copy&amp;quot; href=&amp;amp;apos;javascript:controller.copyToClipboardFieldOfObject(&amp;quot;secureContents.password&amp;quot;, &amp;quot;[object.uuid]&amp;quot;)&amp;amp;apos;&amp;gt;[object.secureContents.password.concealed.html] &amp;lt;span class=&amp;quot;copyButton&amp;quot;&amp;gt;Copy&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;span class=&amp;quot;label&amp;quot;&amp;gt;Created: [object.createdAt] &amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;Last modified on: [object.updatedAt]&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;

  &lt;li&gt;Add the following lines to Contents/Resources/English.lproj/Localizable.strings:
    &lt;pre&gt;
&lt;code&gt;"wallet.computer.LoginInformation" = "Login Information";
"wallet.computer.LoginInformation.desc" = "Generic login information.";
"wallet.computer.LoginInformation.hostname" = "Hostname";
"wallet.computer.LoginInformation.service" = "Service";
"wallet.computer.LoginInformation.username" = "Username";
"wallet.computer.LoginInformation.password" = "Password";&lt;/code&gt;&lt;/pre&gt;
This defines the strings that will be used in the entry and display forms for the item.
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it. Restart 1Password, and you should see the new wallet item type in the list of available types (in this case, under “Computer and Network Information”).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimers:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;This should be clear, but this is a completely unsupported procedure, which I discovered by exploring inside the application. It could stop working at any time, it probably doesn’t work if you are using a localized non-English version (maybe you need to modify different files), and it could destroy your data, uproot your plants and kill your kittens. Don’t blame me.&lt;/li&gt;

  &lt;li&gt;I used this method first with 1Password 2.5.7, and applied it as well on 2.5.8-beta2. Older/newer versions may or may not work.&lt;/li&gt;

  &lt;li&gt;Be careful - make copies of your data and applications before modifying things like described here.&lt;/li&gt;

&lt;p&gt;If you use &lt;a href="http://docs.blacktree.com/quicksilver/what_is_quicksilver"&gt;QuickSilver&lt;/a&gt; (and why wouldn’t you?), you can set up a &lt;a href="http://docs.blacktree.com/quicksilver/preferences/triggers_preferences"&gt;trigger&lt;/a&gt; (see also &lt;a href="http://vjarmy.com/archives/2006/01/quicksilver_gold_trigger.php"&gt;this tutorial&lt;/a&gt;) to run /System/Library/Frameworks/ScreenSaver.framework/ Versions/A/Resources/ScreenSaverEngine.app, which will automatically start the screen saver with your current settings. Very handy!&lt;/p&gt;



&lt;blockquote&gt;
  [From &lt;a href="http://forums.cocoaforge.com/viewtopic.php?t=15744&amp;amp;highlight=growl+logitech"&gt;&lt;cite&gt;cocoaforge - A Festivus for the Rest of Us » View topic - Notification doesn’t appear&lt;/cite&gt;&lt;/a&gt;]
&lt;/blockquote&gt;


&lt;pre&gt;
java -Djava.awt.headless=true ...
&lt;/pre&gt;


&lt;p&gt;The only service offered by Safari is “Search with Google”, so as long as you don’t disable this in Service Scrubber, you should be OK.&lt;/p&gt;

&lt;p&gt;I discovered this problem because &lt;a href="http://1password.com/" title="1password password manager"&gt;1password&lt;/a&gt; stopped working in Safari after I used Service Scrubber. I found the explanation in &lt;a href="http://switchersblog.com/2007/11/13/leopard-code-signing-and-keychain-problems.html#"&gt;the 1password blog&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;In examining the strings inside the Dock binary in Leopard, I found a way to add real separators to the dock, instead of adding dummy applications with empty or decorative icons, as &lt;a href="http://www.google.com/search?q=dock+separators"&gt;commonly done&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This works only in Leopard (OSX 10.5):&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Run the following commands from the Terminal:
&lt;code&gt;&lt;pre&gt;defaults write com.apple.dock persistent-apps -array-add '{ "tile-type" = "spacer-tile"; }'
killall Dock
&lt;/pre&gt;
&lt;/code&gt;
&lt;/li&gt;
    &lt;li&gt;Once the dock restarts, you should see a blank space after the last application that is &lt;strong&gt;permanently&lt;/strong&gt; in the Dock (before the icons for applications that are currently running but not always in the Dock).&lt;/li&gt;
    &lt;li&gt;You can now drag the empty spaces to where you want them, or right-click on them and select 
“Remove from Dock” if you no longer need them.&lt;/li&gt;
&lt;/ol&gt;

&lt;a href="http://www.ultimateshowdown.org/"&gt;Ultimate Showdown of Ultimate Destiny&lt;/a&gt; - The final battle &lt;small&gt;(tags: &lt;a href="http://del.icio.us/ZZamboni/fun"&gt;fun&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/flash"&gt;flash&lt;/a&gt; )&lt;/small&gt;&lt;br&gt;
&lt;a href="https://www.squarefree.com/bookmarklets/"&gt;Jesse’s Bookmarklets Site&lt;/a&gt; -  &lt;small&gt;(tags: &lt;a href="http://del.icio.us/ZZamboni/bookmarklets"&gt;bookmarklets&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/tools"&gt;tools&lt;/a&gt; )&lt;/small&gt;&lt;br&gt;
&lt;a href="http://www.apple.com/support/manuals/macosxserver/"&gt;Apple - Support - Manuals&lt;/a&gt; -  &lt;small&gt;(tags: &lt;a href="http://del.icio.us/ZZamboni/macosx"&gt;macosx&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/reference"&gt;reference&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/manuals"&gt;manuals&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/server"&gt;server&lt;/a&gt; )&lt;/small&gt;&lt;br&gt;
&lt;a href="http://www.satellite-sightseer.com/"&gt;Notes: Interesting Google Satellite Maps&lt;/a&gt; -  &lt;small&gt;(tags: &lt;a href="http://del.icio.us/ZZamboni/cool"&gt;cool&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/maps"&gt;maps&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/google"&gt;google&lt;/a&gt; )&lt;/small&gt;&lt;br&gt;



&lt;p style="text-align:right;font-size:10px"&gt;Technorati Tags: &lt;a href="http://www.technorati.com/tag/comics" rel="tag"&gt;comics&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/grabcartoons" rel="tag"&gt;grabcartoons&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/software" rel="tag"&gt;software&lt;/a&gt;&lt;/p&gt;


&lt;a href="http://www.culater.net/wiki/moin.cgi/CocoaReverseEngineering"&gt;CocoaReverseEngineering - Wikir&lt;/a&gt; - Tips for reverse engineering Cocoa applications, mainly for the purpose of writing plugins for applications with undocumented APIs &lt;small&gt;(tags: &lt;a href="http://del.icio.us/ZZamboni/cocoa"&gt;cocoa&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/development"&gt;development&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/howto"&gt;howto&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/macosx"&gt;macosx&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/objectivec"&gt;objectivec&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/tutorial"&gt;tutorial&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/plugins"&gt;plugins&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/mac"&gt;mac&lt;/a&gt; &lt;a href="http://del.icio.us/ZZamboni/programming"&gt;programming&lt;/a&gt; )&lt;/small&gt;&lt;br&gt;

&lt;p&gt;&lt;strong&gt;Security policies are there for a reason.&lt;/strong&gt; You could get fired for not following them. You could damage your company, your reputation and your career. And in any case, these suggestions are a sure way of getting your IT people angry with you. And really, you do not want that. Remember, IT personnel and secretaries are two groups of people with whom you always want to be in good terms.&lt;/p&gt;

desktop, but there doesn’t seem to be a way to bind that action to a
key. Today I learned about the &lt;a href="http://sweb.cz/tripie/utils/wmctrl/"&gt;wmctrl&lt;/a&gt; program, which
can perform many window-manager operations, so I put together this
simple script which toggles the “show the desktop” state:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
# Toggle the "show the desktop" state.
# Diego Zamboni, Jul 23, 2007

STATE=`wmctrl -m | grep -c 'showing the desktop.*ON'`

if [[ $STATE -eq 1 ]]; then
OPT="-k off"
else
OPT="-k on"
fi

wmctrl $OPT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To map this to Ctrl-F11 (I would have used F11 as in the Mac, but
that’s frequently bound to full-screen mode in applications) using
&lt;a href="http://hocwp.free.fr/xbindkeys/"&gt;xbindkeys&lt;/a&gt;, I added the
following lines to my $HOME/.xbindkeysrc file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Toggle "show desktop"
"toggle_desktop_hide.sh"
m:0x4 + c:95
Control + F11

&lt;ol&gt;&lt;li&gt;Instead of compiling Ruby and RubyGems, I downloaded and installed the &lt;a href="http://rubyosx.rubyforge.org/"&gt;Ruby One-Click installer&lt;/a&gt;, which worked perfectly.&lt;/li&gt;&lt;li&gt;Instead of compiling Subversion, I downloaded and installed the &lt;a href="http://homepage.mac.com/hiirem/svkbuilds.html"&gt;Subversion installer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Now I followed Dan’s instructions, but only the following steps:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Ruby on Rails: &lt;code&gt;sudo gem install rails --include-dependencies&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Capistrano: &lt;code&gt;sudo gem install capistrano --include-dependencies&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Termios: &lt;code&gt;sudo gem install termios --include-dependencies&lt;/code&gt;&lt;/li&gt;&lt;li&gt;MySQL: I used the installer as suggested, but installed 5.0.45, which is the latest version at the moment (instead of 5.0.37 in the writeup).&lt;/li&gt;&lt;li&gt;MySQL native bindings: With the command suggested by Dan, it kept trying to compile it for i386 architecture on my PowerPC machine, so I used &lt;code&gt;sudo gem install mysql -- --with-mysql-config&lt;/code&gt;, and that worked fine.&lt;/li&gt;&lt;li&gt;Fix MySQL: &lt;code&gt;sudo install_name_tool -change /usr/local/mysql/lib/mysql/libmysqlclient.15.dylib /usr/local/mysql/lib/libmysqlclient.15.dylib /usr/local/lib/ruby/gems/1.8/gems/mysql-2.7/lib/mysql.bundle&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ol&gt;



&lt;a href="http://www.rubyinside.com/"&gt;Ruby Inside: Ruby blog with daily tips, news, code and fun&lt;/a&gt; - Interesting and useful Ruby-related blog (tags: &lt;a href="http://del.icio.us/zzamboni/ruby"&gt;ruby&lt;/a&gt; &lt;a href="http://del.icio.us/zzamboni/programming"&gt;programming&lt;/a&gt; &lt;a href="http://del.icio.us/zzamboni/rubyonrails"&gt;rubyonrails&lt;/a&gt; &lt;a href="http://del.icio.us/zzamboni/blog"&gt;blog&lt;/a&gt; &lt;a href="http://del.icio.us/zzamboni/reference"&gt;reference&lt;/a&gt; &lt;a href="http://del.icio.us/zzamboni/tips"&gt;tips&lt;/a&gt; &lt;a href="http://del.icio.us/zzamboni/tricks"&gt;tricks&lt;/a&gt;)&lt;br&gt;
ThinkingRock has been officially made only for Mac, but I copied the
application directory ThinkingRock2.app to my Linux machine, ran the
ThinkingRock2.app/Contents/Resources/ThinkingRock/bin/thinkingrock


distribution&lt;/a&gt; to produce the “my
del.icio.us” section in the sidebar. Today I discovered that
del.icio.us also provides a &lt;a href="http://del.icio.us/help/linkrolls"&gt;javascript
snippet&lt;/a&gt; that you can include to
produce exactly the same output, so I have disabled the del.icio.us
plugin and inserted the javascript in a new Text widget.&lt;/p&gt;

&lt;p&gt;The problem? The del.icio.us code produces a title for the list (you
can specify an empty title, but if I did that, for some reason the
list appeared empty as well), but if I left the empty title in the
Text widget, an ugly empty title bar appeared. Of course, &lt;a href="http://www.marketanomaly.com/?p=220"&gt;someone has
already figured out the
solution&lt;/a&gt;, which is a very simple
modification to the code of the text widget. Happy again!&lt;/p&gt;

&lt;p&gt;I also noticed that del.icio.us can automatically do a daily post of
new links to your blog. Maybe I will try that next, to replace the
&lt;a href="http://neop.gbtopia.com/?p=108"&gt;postalicious plugin&lt;/a&gt; which I have
been using to produce my &lt;a href="http://www.zzamboni.org/brt/2005/02/19/new-linky-category/"&gt;Linky
posts&lt;/a&gt;. Postalicious
works very nicely, but the less moving pieces I have to maintain, the
&lt;a href="http://www.bemboszoo.com/"&gt;Bembo’s Zoo&lt;/a&gt; - Very neat “alphabet zoo” in which the animals are made of animated, morphed and rearranged letters (the ones in their names)&lt;br&gt;


&lt;blockquote&gt;
&lt;ol&gt;
    &lt;li&gt; Go to &lt;a href="http://maps.google.com/maps"&gt;http://maps.google.com/maps&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Click on the tab in the upper middle that says “Get directions”&lt;/li&gt;
    &lt;li&gt;In the first box, type: 1600 Pennsylvania Avenue, Washington, DC&lt;/li&gt;
    &lt;li&gt;In the second box, type: 10 Downing Street, London, UK&lt;/li&gt;
    &lt;li&gt; Enjoy the trip! (look at step 24)&lt;/li&gt;
&lt;/ol&gt;
I recently started playing with &lt;a href="http://fuse.sourceforge.net/"&gt;FUSE&lt;/a&gt;, for
creating file systems in user space in Unix.&lt;/p&gt;

&lt;p&gt;And a couple of days ago, &lt;a href="http://marcel-g.homeip.net/"&gt;Marcel&lt;/a&gt; asks
me if I knew of any blogging client that would allow complete offline
editing of the posts as files, and then synchronize them. That was
enough to plant the seed in my mind…&lt;/p&gt;

&lt;p&gt;So I give you &lt;a href="http://www.zzamboni.org/brt/files/metaweblogfs.rb"&gt;MetaWeblogFS&lt;/a&gt;, a quite
simple Ruby script that uses the
&lt;a href="http://rubyforge.org/projects/fusefs/"&gt;FuseFS&lt;/a&gt; Ruby-FUSE bindings to
mount a filesystem in which your blog posts (for any blog that
implements the MetaWeblog API, including Wordpress) appear as
files. The filenames are the titles, and you can edit posts simply by
editing the files, and create new posts by creating new files.&lt;/p&gt;

&lt;p&gt;Here is how to use it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby metaweblogfs.rb mountdirectory password host path user [blogid]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can specify values for all the parameters at the beginning of the
script. It will connect to your blog, read the list of posts, and
create a file system in the mountpoint you specified. You can edit or
create new files there. Press Ctrl-C to finish the script and unmount
the filesystem.&lt;/p&gt;

&lt;p&gt;This was in total about two hours of coding, having &lt;em&gt;never&lt;/em&gt; written a
Ruby program before. FUSE is just too cool, and the Ruby bindings make
it very easy to use.&lt;/p&gt;

&lt;p&gt;Some tips, issues and (maybe) future development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Posts are saved as drafts by default (you can modify this at the top
of the script). To set a post to “published”, simply “touch” the
file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“touch reload” to reload the list of posts (it is automatically reloaded after you modify or create files).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FuseFS doesn’t allow to specify the mtime or atime of a file, so
post creation dates cannot be used as the file timestamp.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For now it’s just a flat directory. Could be made to show
directories for categories, or time ranges, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;New posts are created in the default category. I guess this could be fixed by having a directory structure representing categories, so you could create new files in the correct one.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Credit where credit is due: I took the XML-RPC code from &lt;a href="http://crafterm.net/blog/articles/2006/09/22/blog-content-migration-from-movabletype-to-typo-using-xml-rpc"&gt;crafterm’s
weblog&lt;/a&gt;,
and borrowed a lot from the FuseFS sample programs.&lt;/p&gt;

&lt;p&gt;I’m writing this post in Emacs, directly on my blog’s mounted
&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
"\\(\\[%[-+]?\\)\\(.+?\\)\\([-+]?%\\]\\)"
&lt;/pre&gt;

&lt;p&gt;and the new one is:
&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
"\\(\\[%[-+]?\\)\\([^\r]+?\\)\\([-+]?%\\]\\)"
&lt;/pre&gt;


&lt;code&gt;
ifconfig e1000g0 plumb

&lt;ol&gt;&lt;li&gt;I have an &lt;a href="http://www.imdb.com/name/nm1764000/"&gt;IMDB entry&lt;/a&gt;. Yup, that’s actually me. If you are curious enough to follow the links, I was the “little brother, who always wear a mask to play,” so my face never appeared onscreen. There went my ticket to fame…&lt;/li&gt;&lt;li&gt;I have a brown belt in &lt;a href="http://en.wikipedia.org/wiki/Shotokan"&gt;Shotokan Karate&lt;/a&gt; (I was the first webmaster of the &lt;a href="http://web.ics.purdue.edu/~shotokan/"&gt;Challenge Karate Club&lt;/a&gt;); I also practiced fencing for a while.&lt;/li&gt;&lt;li&gt;I was born in Argentina, but I have moved a lot in my life. In total, I have lived in 10 cities and 18 houses or apartments during my life! That makes for an average of a move every 2 years since I was born.&lt;/li&gt;&lt;li&gt; It seems the urge to move around comes in my genes. Around 1900, my great-grandfather, after having traveled around Italy for a few years, emigrated from Italy to Argentina, where he settled in &lt;a href="http://maps.google.com/maps?f=q&amp;amp;hl=en&amp;amp;q=Santa+Ana,+Misiones+Argentina&amp;amp;layer=&amp;amp;sll=-27.373444,-55.578289&amp;amp;sspn=0.039787,0.090294&amp;amp;ie=UTF8&amp;amp;om=1&amp;amp;z=5&amp;amp;ll=-27.371767,-55.59082&amp;amp;spn=20.292709,46.230469&amp;amp;t=h&amp;amp;iwloc=addr"&gt;Santa Ana&lt;/a&gt; and became a precursor in the production of &lt;a href="http://en.wikipedia.org/wiki/Yerba_mate"&gt;Yerba Mate&lt;/a&gt;. He wrote periodically a column for an Italian newspaper in Argentina, where he narrated episodes of his life (as &lt;a href="http://tadek.pietraszek.org/"&gt;Tadek&lt;/a&gt; put it, “just like blogging”). Years later, the newspaper edited all his columns into a book written in Italian, which was finally &lt;a href="http://clcnoticiasyeventos.blogspot.com/2005/12/actividades-desarrolladas-por-el.html"&gt;translated&lt;/a&gt; into &lt;a href="http://photos1.blogger.com/x/blogger/7433/1916/1600/986593/BZ.jpg"&gt;spanish&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;My first technical “publication” was in the venerable &lt;a href="http://en.wikipedia.org/wiki/COMPUTE!&amp;#39;s_Gazette"&gt;COMPUTE!’s Gazette&lt;/a&gt; magazine, which published a program I wrote for the &lt;a href="http://en.wikipedia.org/wiki/Commodore_128"&gt;Commodore 128&lt;/a&gt; for cataloguing floppy disks. It never appeared in print because the program was quite big (a whooping 282 lines of BASIC code! Amounting to 13KB, plus 1KB of code written directly in assembly for time-critical routines like sorting), but it was included in the September ‘91 issue of the companion &lt;a href="http://www.jbrain.com/pub/cbm/mags/cg/GazetteDisks/089SEP91.ZIP"&gt;disk&lt;/a&gt; (look for “Supercataloger”, to run it, you need a Commodore 128 emulator, such as &lt;a href="http://viceteam.org/"&gt;Vice&lt;/a&gt;).&lt;/li&gt;&lt;/ol&gt;

&lt;/p&gt;

&lt;p style="text-align:right;font-size:10px"&gt;Technorati Tags: &lt;a href="http://www.technorati.com/tag/blogging" rel="tag"&gt;blogging&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/cutline" rel="tag"&gt;cutline&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/wordpress" rel="tag"&gt;wordpress&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;http://lowendmac.com/ppc/g3aio.shtml
http://eshop.macsales.com/OSXCenter/XPostFacto/Framework.cfm?page=XPostFacto3.html
http://lowendmac.com/stotler/06/0731.html
http://lowendmac.com/misc/06/0628.html
http://lowendmac.com/thompson/06/0103.html
http://lowendmac.com/misc/06/0515.html
http://wamcom.org/


&lt;p&gt;So I patched xscreensaver to add a new configuration parameter “glScreenNumber”. If this parameter is set, GL screensavers will be run only on that screen, and only non-GL screensavers will be run on the other screens. So what  I do is I set in my .xscreensaver:&lt;/p&gt;

&lt;p style="text-indent:20pt"&gt;glScreenNumber: 1&lt;/p&gt;

&lt;p&gt;(screens are numbered starting at 1, so this means my left screen)&lt;/p&gt;

&lt;p&gt;and now I get GL screensavers only on the left screen (where they can be drawn in full) and non-GL screensavers (which don’t suffer from the limitation) on the right screen, and both screens look nice.&lt;/p&gt;

&lt;p&gt;You can get the patch for xscreensaver 5.00 here: &lt;a href="http://www.zzamboni.org/brt/files/xscreensaver-5.00-glscreencontrol.patch"&gt;xscreensaver-5.00-glscreencontrol.patch&lt;/a&gt;
If you use Gentoo, you can get the xscreensaver portage overlay (which also includes the &lt;a href="http://www.zzamboni.org/brt/2006/04/25/106/trackback/"&gt;fingerprint reader patch&lt;/a&gt;) here: &lt;a href="http://www.zzamboni.org/brt/files/xscreensaver-overlay.tar.gz"&gt;xscreensaver-overlay.tar.gz&lt;/a&gt;&lt;/p&gt;


&lt;ol&gt;&lt;li&gt;Install kernel 2.6.18 (or a previous one with the appropriate patches)&lt;/li&gt;&lt;li&gt;Add “hdc=noprobe” to the kernel boot parameters, which makes the ata_piix driver manage the Ultrabay instead of ide-disk. This has the added benefit of enabling DMA on the Ultrabay, making things like DVD burning considerably faster and convenient (before, the machine would be unusable while burning a DVD, whereas now I don’t notice it).&lt;/li&gt;&lt;li&gt;Install the scripts from the Thinkwiki page, and tie them to ACPI events so that things work automagically (you can always invoke them by hand as well, of course).&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;That’s it - it works. The one snag I had, and which had me stumped for a couple of days, was that I had a disk password on my second disk, so on reinserting it the machine would not recognize it. Removing the disk password solved the problem. I’ve also seen that hdparm has an option to unlock the disk by providing the password, so I guess this could also work, but I have not tried it.&lt;/p&gt;

&lt;p&gt;&amp;lt;rant&amp;gt;This is one of the things that every once in a while bugs me about Linux - that the capabilities are there, but it takes so long for them to be usable. I’ve seen Windows users do hot-swapping on their Thinkpads for a long time now, but only recently is it possible on Linux. I know I shouldn’t complain, and the code is there, so if I want something so bad I should get on coding it, but still it irks me that some things are so difficult to achieve.&amp;lt;/rant&amp;gt; Not that I’m about to switch to Windows or anything, but I wouldn’t mind something as easy to use as a Mac, also for work.&lt;/p&gt;



&lt;p style="text-align:right;font-size:10px"&gt;Technorati Tags: &lt;a href="http://www.technorati.com/tag/linux" rel="tag"&gt;linux&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/sysadmin" rel="tag"&gt;sysadmin&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/tips" rel="tag"&gt;tips&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;p style="text-align:right;font-size:10px"&gt;Technorati Tags: &lt;a href="http://www.technorati.com/tag/comics" rel="tag"&gt;comics&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/grabcartoons" rel="tag"&gt;grabcartoons&lt;/a&gt;, &lt;a href="http://www.technorati.com/tag/software" rel="tag"&gt;software&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Standard disclaimer applies: use at your own risk, backup your data, floss your teeth, etc. etc.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
#!/usr/bin/perl -w

use DB_File;

$addrdb=$ARGV[0]
    || &amp;quot;$ENV{HOME}/.evolution/addressbook/local/system/addressbook.db&amp;quot;;
print &amp;quot;* Examining $addrdb\n&amp;quot;;

tie %h, &amp;#39;DB_File&amp;#39;, $addrdb, O_RDWR, 0777, $DB_HASH
  or die &amp;quot;Error opening file: $!\n&amp;quot;;

# Keep track of names we&amp;#39;ve seen
%names=();

for $k (keys %h) {
    $card=$h{$k};
    if ($card =~ /^FN:(.*)$/m) {
        $name=$1;
        $name=~s/\r//g;
        chomp $name;
        if (exists($names{$name})) {
            print &amp;quot;* Previously found $name, removing\n&amp;quot;;
            delete $h{$k};
        }
        $names{$name}++;
    }
}

print &amp;quot;* Done. Duplicate statistics:\n&amp;quot;;
print join(&amp;quot;\n&amp;quot;, map { &amp;quot;$_: $names{$_} times&amp;quot; } 
           sort { $names{$b} &amp;lt;=&amp;gt; $names{$a} } 
           grep { $names{$_} &amp;gt; 1 } keys %names
          ).&amp;quot;\n&amp;quot;;
&lt;/code&gt;
&lt;p&gt;&lt;br&gt;
&lt;p style="font-size:10px;text-align:right"&gt;technorati tags:&lt;a href="http://technorati.com/tag/linux" rel="tag"&gt;linux&lt;/a&gt;, &lt;a href="http://technorati.com/tag/evolution" rel="tag"&gt;evolution&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;</content><author><name>Hitchhiker</name></author><source gr:stream-id="feed/http://www.zzamboni.org/brt/feed/atom/"><id>tag:google.com,2005:reader/feed/http://www.zzamboni.org/brt/feed/atom/</id><title type="html">BrT</title><link rel="alternate" href="http://zzamboni.org/brt" type="text/html"/></source></entry></feed>
